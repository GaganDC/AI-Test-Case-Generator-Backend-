
import os
from github import Github

# Read GitHub token from environment variable securely
GITHUB_TOKEN = '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'
if not GITHUB_TOKEN:
    raise ValueError("GITHUB_TOKEN environment variable not set")

def create_pull_request(
    token: str,
    repo_full_name: str,
    new_branch_name: str,
    file_path: str,
    file_content: str,
    pr_title: str,
    pr_body: str
) -> str:
    """
    Create a pull request on GitHub with new or updated file.

    Args:
        token (str): GitHub personal access token.
        repo_full_name (str): Repo in 'owner/repo' format.
        new_branch_name (str): New branch name to create.
        file_path (str): File path in repo to add/update.
        file_content (str): Content of the file.
        pr_title (str): The title of the pull request.
        pr_body (str): The body description of the pull request.

    Returns:
        str: URL of the created pull request.
    """

    # Initialize GitHub client using token
    g = Github(token)

    # Get repository object
    repo = g.get_repo(repo_full_name)

    # Get latest commit SHA from main branch to base the new branch on
    base_branch = repo.get_branch("main")
    base_sha = base_branch.commit.sha

    # Create reference name for new branch
    ref = f"refs/heads/{new_branch_name}"

    # Create new branch (git ref) on repo
    repo.create_git_ref(ref, base_sha)

    # Add or update file contents on the new branch
    try:
        # Check if file already exists on this branch
        contents = repo.get_contents(file_path, ref=new_branch_name)
        # Update existing file
        repo.update_file(contents.path, "Update test code", file_content, contents.sha, branch=new_branch_name)
    except Exception:
        # If file does not exist, create it
        repo.create_file(file_path, "Add test code", file_content, branch=new_branch_name)

    # Create the pull request from new branch to main
    pr = repo.create_pull(
        title=pr_title,
        body=pr_body,
        head=new_branch_name,
        base="main"
    )

    # Return URL of created PR
    return pr.html_url

# Example usage (remove or adapt in your code)
if __name__ == "__main__":
    pr_url = create_pull_request(
        token=GITHUB_TOKEN,
        repo_full_name="your-username/your-repository",
        new_branch_name="test-code-branch-001",
        file_path="tests/test_example.py",
        file_content="# Example test code\n def test_example():\n     assert 1 + 1 == 2\n",
        pr_title="Add generated test code",
        pr_body="This PR adds autogenerated test code to the repository."
    )
    print(f"Pull request created: {pr_url}")
